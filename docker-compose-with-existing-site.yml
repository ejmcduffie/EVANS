version: '3.8'

services:
  # Existing Website (Nginx)
  website:
    image: nginx:alpine
    container_name: existing-website
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./website-nginx/conf:/etc/nginx/conf.d
      - ./website-html:/usr/share/nginx/html
      - ./website-nginx/certs:/etc/nginx/certs
      - ./website-nginx/vhost.d:/etc/nginx/vhost.d
    networks:
      - web
    depends_on:
      - app

  # AncestryChain Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ancestrychain-app
    restart: always
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    volumes:
      - ./uploads:/app/uploads
    networks:
      - web
    depends_on:
      - mongodb
      - redis

  # MongoDB Database
  mongodb:
    image: mongo:6
    container_name: ancestrychain-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongodb_data:/data/db
    networks:
      - web

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: ancestrychain-redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - web

  # Nginx Reverse Proxy for AncestryChain
  nginx:
    image: nginx:alpine
    container_name: ancestrychain-nginx
    restart: always
    ports:
      - "8080:80"  # Different port than the main website
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certificates:/etc/nginx/certificates
      - ./nginx/vhost.d:/etc/nginx/vhost.d
    networks:
      - web
    depends_on:
      - app

networks:
  web:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
